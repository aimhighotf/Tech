name: Build APK on GitHub

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 45

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install Android SDK
      run: |
        # Install Android Command Line Tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-*.zip -d cmdline-tools
        mv cmdline-tools/cmdline-tools cmdline-tools/latest
        
        # Set environment variables
        echo "ANDROID_SDK_ROOT=$PWD" >> $GITHUB_ENV
        echo "$PWD/cmdline-tools/latest/bin:$PWD/platform-tools" >> $GITHUB_PATH
        
        # Accept all licenses
        mkdir -p licenses
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > licenses/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > licenses/android-sdk-arm-dbt-license
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > licenses/android-sdk-preview-license
        
        # Install required components
        ./cmdline-tools/latest/bin/sdkmanager --install \
            "build-tools;34.0.0" \
            "platform-tools" \
            "platforms;android-33" \
            "ndk;25.2.9519653" \
            "cmdline-tools;latest"

    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y -qq \
            git zip unzip python3-pip \
            zlib1g-dev libncurses5-dev \
            liblzma-dev lzma \
            libssl-dev libffi-dev \
            python3-dev

    - name: Set up Python environment
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install \
            buildozer==1.5.0 \
            cython==0.29.36 \
            virtualenv==20.24.3 \
            setuptools==68.0.0

    - name: Configure Buildozer
      run: |
        buildozer init
        cat > buildozer.spec <<EOL
[app]
title = MyApp
package.name = myapp
package.domain = org.example
source.dir = .
version = 0.1
requirements = python3,kivy==2.1.0

# Android specific
android.sdk_path = $ANDROID_SDK_ROOT
android.ndk_path = $ANDROID_SDK_ROOT/ndk/25.2.9519653
android.ndk_version = 25.2.9519653
android.sdk_version = 34
android.api_level = 33
android.accept_sdk_license = True
android.aidl_path = $ANDROID_SDK_ROOT/build-tools/34.0.0/aidl
android.ant_path = /usr/bin/ant

# Permissions
android.permissions = INTERNET,CAMERA,NFC

# Build optimization
android.arch = armeabi-v7a
p4a.branch = develop
EOL

    - name: Build APK (with retry)
      run: |
        set -ex
        max_retries=3
        attempt=1
        
        while [ $attempt -le $max_retries ]; do
          echo "Attempt $attempt of $max_retries"
          if buildozer -v android debug; then
            mkdir -p artifacts
            cp bin/*.apk artifacts/
            echo "::notice::Build successful after $attempt attempts"
            break
          else
            echo "::warning::Build attempt $attempt failed"
            ((attempt++))
            if [ $attempt -le $max_retries ]; then
              echo "Retrying in 10 seconds..."
              sleep 10
            else
              echo "::error::All build attempts failed"
              ls -la bin/
              exit 1
            fi
          fi
        done

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: apk-artifacts
        path: |
          artifacts/*.apk
          buildozer.spec
        retention-days: 7
      if: always()
